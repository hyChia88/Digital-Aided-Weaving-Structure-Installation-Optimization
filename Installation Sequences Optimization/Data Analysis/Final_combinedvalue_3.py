import re
from collections import defaultdict
import matplotlib.pyplot as plt

# Raw data, S3
# Tags_data, 'sequences_name':[rods]
tags_data = {
    'A':['#15','#4','#9','#10','#7','#13','#11','#5','#3','#12','#0','#2','#1','#6','#8','#14'],
'B':['#10','#8','#1','#11','#0','#6','#12','#5','#2','#14','#4','#15','#9','#3','#7','#13'],
'C':['#12','#11','#9','#4','#2','#8','#15','#5','#14','#1','#7','#13','#0','#10','#6','#3'],
'D':['#13','#14','#5','#3','#0','#6','#8','#9','#10','#4','#12','#1','#11','#2','#15','#7'],
'E':['#4','#5','#10','#3','#12','#8','#7','#13','#15','#11','#2','#9','#6','#14','#0','#1'],
'F':['#9','#12','#13','#6','#15','#2','#1','#11','#0','#4','#14','#8','#3','#5','#7','#10'],
'G':['#14','#11','#9','#7','#6','#13','#1','#8','#10','#12','#5','#15','#3','#0','#4','#2'],
'H':['#3','#6','#13','#4','#15','#0','#12','#10','#5','#2','#1','#8','#9','#14','#11','#7'],
'I':['#15','#12','#10','#1','#9','#3','#2','#7','#6','#5','#14','#13','#11','#4','#0','#8'],
'J':['#2','#8','#13','#4','#14','#5','#0','#11','#3','#1','#9','#15','#12','#10','#7','#6'],
'K':['#8','#5','#15','#11','#6','#7','#12','#13','#10','#4','#3','#2','#1','#0','#14','#9'],
'L':['#1','#11','#5','#4','#13','#12','#8','#9','#10','#2','#0','#14','#6','#3','#15','#7'],
'M':['#5','#3','#10','#2','#6','#1','#14','#8','#7','#15','#4','#13','#9','#11','#12','#0'],
'N':['#9','#14','#4','#15','#13','#3','#0','#12','#8','#11','#1','#6','#2','#10','#5','#7'],
'O':['#0','#6','#12','#11','#9','#7','#2','#4','#3','#10','#8','#14','#15','#13','#5','#1'],
'P':['#11','#1','#13','#2','#10','#15','#14','#0','#6','#5','#3','#9','#8','#7','#12','#4'],
'Q':['#15','#6','#0','#10','#14','#9','#4','#7','#1','#5','#12','#13','#2','#8','#3','#11'],
'R':['#8','#3','#13','#12','#5','#6','#9','#0','#2','#15','#11','#1','#10','#14','#4','#7'],
'S':['#12','#1','#0','#8','#15','#5','#2','#4','#3','#7','#11','#10','#14','#13','#9','#6'],
'T':['#2','#5','#9','#14','#10','#11','#13','#8','#1','#6','#3','#0','#12','#4','#15','#7'],
'U':['#5','#10','#11','#0','#4','#12','#8','#7','#15','#1','#9','#2','#6','#13','#3','#14'],
'V':['#3','#9','#12','#15','#6','#13','#2','#8','#4','#14','#0','#10','#11','#5','#7','#1'],
'W':['#2','#4','#0','#3','#1','#9','#14','#10','#7','#11','#8','#15','#5','#6','#12','#13'],
'X':['#14','#6','#10','#11','#13','#15','#3','#12','#1','#4','#5','#0','#9','#2','#8','#7'],
'Y':['#4','#15','#9','#12','#11','#0','#7','#2','#5','#6','#3','#14','#1','#10','#8','#13'],
'Z':['#6','#8','#1','#2','#5','#13','#4','#9','#14','#15','#10','#0','#12','#3','#7','#11'],
'AA':['#3','#14','#8','#5','#15','#0','#1','#7','#10','#12','#6','#11','#9','#4','#2','#13'],
'AB':['#6','#10','#5','#9','#12','#3','#8','#4','#11','#13','#2','#1','#0','#14','#15','#7'],
'AC':['#5','#1','#13','#11','#2','#0','#8','#7','#6','#15','#3','#14','#9','#4','#10','#12'],
'AD':['#2','#11','#15','#14','#4','#1','#13','#8','#12','#10','#3','#5','#0','#6','#7','#9'],
'AE':['#13','#12','#9','#6','#0','#10','#7','#1','#2','#8','#15','#4','#5','#11','#3','#14'],
'AF':['#10','#3','#4','#15','#2','#13','#11','#5','#14','#9','#6','#8','#1','#0','#7','#12'],
'AG':['#15','#9','#13','#2','#1','#6','#3','#14','#0','#11','#7','#5','#4','#12','#10','#8'],
'AH':['#8','#4','#14','#11','#12','#5','#9','#1','#10','#3','#13','#15','#6','#2','#0','#7'],
'AI':['#12','#11','#6','#8','#13','#15','#5','#10','#0','#7','#4','#2','#14','#9','#1','#3'],
'AJ':['#3','#4','#7','#0','#10','#1','#9','#5','#2','#8','#14','#6','#13','#12','#11','#15'],
'AK':['#5','#6','#14','#13','#3','#12','#8','#1','#4','#15','#0','#7','#9','#11','#10','#2'],
'AL':['#7','#0','#12','#15','#11','#6','#3','#10','#8','#1','#2','#13','#9','#14','#4','#5'],
'AM':['#11','#13','#10','#9','#2','#4','#7','#14','#0','#3','#8','#15','#12','#5','#6','#1'],
'AN':['#2','#10','#7','#0','#14','#1','#15','#6','#12','#9','#5','#13','#8','#4','#3','#11'],
'AO':['#9','#15','#3','#12','#13','#4','#7','#5','#1','#0','#2','#11','#10','#6','#8','#14'],
'AP':['#8','#7','#0','#6','#3','#9','#2','#5','#10','#11','#14','#15','#4','#13','#12','#1'],
'AQ':['#2','#4','#8','#1','#10','#15','#11','#5','#13','#14','#12','#3','#7','#0','#6','#9'],
'AR':['#11','#7','#14','#5','#6','#9','#12','#0','#8','#1','#4','#3','#13','#2','#15','#10'],
'AS':['#5','#4','#13','#8','#9','#15','#2','#7','#6','#0','#10','#1','#14','#11','#12','#3'],
'AT':['#1','#7','#6','#15','#3','#2','#0','#10','#14','#4','#8','#12','#11','#9','#13','#5'],
'AU':['#14','#10','#9','#12','#1','#11','#3','#13','#7','#6','#8','#15','#5','#0','#2','#4'],
'AV':['#7','#11','#0','#4','#15','#9','#1','#3','#2','#5','#8','#13','#14','#10','#6','#12'],
'AW':['#15','#2','#6','#13','#7','#5','#14','#12','#10','#0','#3','#1','#4','#8','#9','#11'],
'AX':['#3','#8','#2','#7','#1','#14','#12','#9','#4','#0','#5','#10','#15','#11','#6','#13'],
'AY':['#12','#10','#8','#3','#6','#15','#5','#1','#13','#11','#7','#2','#9','#4','#0','#14'],
'AZ':['#13','#7','#9','#5','#4','#8','#11','#0','#2','#3','#14','#12','#1','#6','#10','#15'],
'BA':['#5','#11','#2','#1','#6','#8','#14','#12','#9','#13','#7','#15','#10','#3','#4','#0'],
'BB':['#13','#7','#12','#14','#15','#4','#1','#10','#0','#8','#6','#2','#3','#9','#11','#5'],
'BC':['#3','#10','#6','#9','#7','#2','#13','#4','#11','#1','#8','#5','#14','#15','#12','#0'],
'BD':['#4','#7','#13','#2','#3','#15','#11','#12','#14','#0','#6','#9','#5','#8','#10','#1'],
'BE':['#15','#12','#11','#14','#1','#5','#4','#10','#7','#3','#13','#2','#8','#9','#0','#6'],
'BF':['#8','#7','#13','#9','#10','#5','#6','#0','#1','#2','#15','#3','#12','#14','#4','#11'],
'BG':['#10','#0','#8','#5','#15','#2','#4','#12','#7','#14','#13','#9','#11','#1','#6','#3'],
'BH':['#2','#9','#7','#5','#1','#3','#13','#12','#14','#8','#6','#11','#0','#10','#4','#15'],
'BI':['#0','#4','#11','#3','#9','#8','#1','#10','#15','#7','#13','#2','#6','#12','#5','#14'],
'BJ':['#7','#11','#15','#10','#6','#13','#2','#8','#12','#0','#3','#14','#4','#1','#9','#5'],
'BK':['#1','#2','#0','#9','#4','#12','#14','#7','#6','#8','#13','#5','#3','#15','#11','#10'],
'BL':['#3','#7','#14','#6','#13','#1','#15','#9','#5','#4','#0','#11','#10','#2','#8','#12'],
'BM':['#4','#0','#3','#11','#5','#10','#7','#2','#1','#6','#12','#13','#14','#9','#8','#15'],
'BN':['#6','#8','#7','#10','#2','#9','#11','#13','#5','#12','#3','#14','#4','#15','#0','#1'],
'BO':['#4','#12','#8','#1','#14','#15','#0','#5','#6','#7','#9','#3','#13','#10','#2','#11'],
'BP':['#7','#5','#8','#13','#4','#1','#2','#10','#12','#0','#11','#3','#15','#14','#6','#9'],
'BQ':['#3','#0','#2','#6','#9','#8','#10','#12','#15','#11','#7','#14','#1','#13','#4','#5'],
'BR':['#7','#15','#12','#1','#10','#3','#14','#11','#13','#4','#8','#9','#0','#6','#5','#2'],
'BS':['#11','#9','#6','#0','#1','#3','#7','#8','#2','#15','#5','#12','#4','#10','#13','#14'],
'BT':['#7','#4','#15','#13','#2','#9','#12','#5','#10','#14','#1','#6','#3','#8','#0','#11'],
'BU':['#2','#6','#12','#0','#10','#14','#5','#7','#11','#4','#9','#13','#3','#8','#15','#1'],
'BV':['#8','#10','#14','#7','#3','#4','#1','#9','#5','#13','#11','#6','#15','#2','#0','#12'],
'BW':['#6','#8','#5','#15','#11','#3','#0','#2','#12','#9','#1','#7','#4','#14','#10','#13'],
'BX':['#11','#4','#5','#7','#2','#12','#8','#14','#13','#10','#6','#3','#1','#15','#0','#9'],
'BY':['#13','#1','#14','#9','#10','#8','#0','#15','#4','#7','#3','#11','#2','#12','#6','#5'],
'BZ':['#10','#15','#7','#6','#1','#8','#13','#11','#12','#2','#9','#5','#14','#0','#4','#3'],
'CA':['#13','#9','#3','#12','#2','#11','#4','#0','#14','#7','#8','#5','#1','#15','#10','#6'],
'CB':['#7','#11','#6','#14','#15','#9','#3','#10','#13','#5','#8','#4','#0','#1','#2','#12'],
'CC':['#13','#10','#1','#4','#5','#0','#7','#2','#3','#12','#6','#9','#8','#11','#15','#14'],
'CD':['#0','#7','#9','#6','#5','#12','#2','#13','#15','#1','#14','#11','#4','#3','#8','#10'],
'CE':['#3','#12','#2','#8','#13','#5','#15','#4','#14','#11','#9','#0','#7','#6','#10','#1'],
'CF':['#6','#5','#14','#7','#0','#1','#8','#3','#11','#10','#13','#4','#12','#2','#15','#9'],
'CG':['#11','#4','#10','#13','#9','#8','#12','#2','#1','#3','#15','#6','#0','#7','#14','#5'],
'CH':['#15','#12','#7','#0','#2','#14','#8','#9','#4','#13','#3','#1','#5','#11','#10','#6'],
'CI':['#1','#4','#14','#13','#6','#8','#7','#11','#10','#0','#5','#15','#12','#2','#3','#9'],
'CJ':['#7','#3','#0','#1','#15','#9','#11','#10','#4','#12','#2','#5','#13','#8','#6','#14'],
'CK':['#10','#12','#11','#13','#2','#6','#3','#5','#7','#14','#1','#0','#9','#8','#4','#15'],
'CL':['#9','#7','#0','#14','#5','#4','#3','#15','#6','#13','#12','#10','#1','#8','#2','#11'],
'CM':['#8','#15','#5','#6','#1','#13','#9','#12','#10','#7','#2','#0','#11','#3','#4','#14'],
'CN':['#5','#7','#8','#12','#0','#4','#10','#2','#1','#11','#14','#6','#13','#9','#15','#3'],
'CO':['#2','#10','#6','#9','#3','#11','#8','#13','#14','#15','#7','#4','#1','#0','#12','#5'],
'CP':['#15','#11','#14','#1','#7','#4','#0','#3','#8','#12','#9','#6','#2','#10','#13','#5'],
'CQ':['#6','#12','#13','#1','#2','#10','#8','#3','#7','#4','#5','#15','#14','#11','#0','#9'],
'CR':['#4','#7','#2','#9','#10','#0','#15','#14','#6','#5','#11','#8','#1','#3','#13','#12'],
'CS':['#3','#10','#14','#13','#11','#5','#4','#7','#9','#12','#8','#2','#6','#0','#15','#1'],
'CT':['#9','#4','#7','#11','#1','#3','#5','#12','#6','#0','#15','#2','#10','#14','#13','#8'],
'CU':['#12','#8','#5','#15','#2','#9','#10','#4','#3','#13','#14','#1','#7','#6','#0','#11'],
'CV':['#5','#7','#8','#10','#14','#6','#0','#3','#12','#11','#9','#1','#15','#4','#13','#2'],
}

# 'sequence_name=[displacment]
data = {
    'A':[2.00291,1.301794,1.9638,1.956483,1.055173,1.260134,0.544508,0.12234,0.116386,0.058862,0.058916,0.058185,0.059648,0.02408,0.012707,0.023119],
'B':[2.79237,1.481233,0.488051,0.377958,0.37794,0.384624,0.153588,0.152072,0.079424,0.138788,0.039749,0.03968,0.038656,0.031123,0.018359,0.01844],
'C':[2.834895,1.030464,2.162986,0.970858,0.976859,0.983909,0.9839,0.111963,0.112848,0.124509,0.057754,0.057741,0.058584,0.056471,0.038167,0.020657],
'D':[1.208471,2.084037,1.284003,0.858916,0.808453,0.444877,0.292499,0.283075,0.737642,0.172888,0.108549,0.02406,0.059284,0.026254,0.026309,0.024059],
'E':[0.146539,0.810379,0.508565,0.176484,0.203827,0.133854,0.233511,0.23277,0.232768,0.096167,0.052783,0.055228,0.029161,0.029228,0.029643,0.021574],
'F':[2.299968,2.946044,2.955762,1.14567,1.301903,1.082127,0.422691,0.089769,0.090394,0.06137,0.061449,0.038915,0.040193,0.029061,0.021985,0.021959],
'G':[2.092108,2.73768,2.735902,2.151593,1.997458,1.997457,0.283775,0.283775,0.28377,0.133207,0.133193,0.133173,0.024341,0.024347,0.024339,0.024297],
'H':[0.104065,0.942206,0.942254,0.94219,1.301906,0.941787,0.238102,0.238102,0.238101,0.238102,0.131243,0.080997,0.016362,0.023656,0.026647,0.020921],
'I':[2.00291,2.837272,1.579371,0.574636,0.539469,0.31245,0.294619,0.181407,0.097445,0.032414,0.032364,0.112885,0.026014,0.025623,0.023189,0.022201],
'J':[0.103851,0.476111,1.218482,1.220487,1.220407,1.220322,0.220689,0.124992,0.126928,0.126338,0.126946,0.126115,0.109962,0.107583,0.054156,0.024561],
'K':[1.087481,0.215624,0.215962,1.148464,1.074272,0.328594,0.132779,0.132992,0.116132,0.09484,0.095896,0.059131,0.02282,0.021487,0.023133,0.02174],
'L':[0.08422,1.583557,0.642606,0.130493,0.130482,0.230978,0.102116,0.120067,0.10875,0.106885,0.107831,0.10782,0.04055,0.030542,0.030545,0.022458],
'M':[0.810412,0.810398,0.958019,0.958406,0.842341,0.389372,0.389002,0.38855,0.123519,0.123455,0.124005,0.12399,0.125623,0.116025,0.023447,0.023447],
'N':[2.299968,2.30026,1.960445,1.963453,1.960884,1.575604,1.575524,0.643271,0.645557,0.631805,0.299655,0.053786,0.039985,0.039496,0.028437,0.024065],
'O':[0.038183,0.942295,0.255892,0.367287,0.391621,0.367815,0.354087,0.210466,0.095811,0.096105,0.096008,0.195327,0.186916,0.186908,0.031092,0.023872],
'P':[2.737267,1.589707,1.589698,0.270743,0.226896,0.413301,0.4176,0.227338,0.228539,0.228761,0.191375,0.189143,0.186221,0.122441,0.023523,0.023487],
'Q':[2.00291,2.004437,1.127879,1.744973,1.996329,1.997704,0.269461,0.220345,0.203359,0.107301,0.107245,0.378406,0.421304,0.120511,0.024614,0.024575],
'R':[1.087481,0.382525,0.382511,0.350543,0.15767,0.148503,0.137275,0.110687,0.11219,0.112247,0.079725,0.075252,0.069915,0.06918,0.028207,0.026782],
'S':[2.834895,1.344817,0.144989,0.484814,0.484962,0.113156,0.107727,0.10808,0.105664,0.105921,0.096888,0.091246,0.091241,0.09116,0.057909,0.023202],
'T':[0.103851,0.810379,1.371241,1.368792,1.946459,1.372391,1.372491,1.374714,0.261939,0.26945,0.187238,0.187247,0.073593,0.028847,0.028834,0.024289],
'U':[0.810412,1.941114,0.72914,0.729128,0.139125,0.158391,0.088202,0.092784,0.09178,0.091227,0.055036,0.054287,0.03653,0.036515,0.012033,0.023138],
'V':[0.104065,1.580403,1.065831,1.301607,1.300531,1.300532,0.233609,0.133491,0.135944,0.190386,0.188152,0.188279,0.188333,0.070208,0.030678,0.020435],
'W':[0.103851,0.146705,0.146635,0.146754,0.146752,0.305615,0.310641,0.359009,0.359414,0.179147,0.179504,0.179525,0.115451,0.116202,0.023356,0.023363],
'X':[2.092108,1.997458,1.997458,1.997446,1.997433,1.997433,0.555362,0.246981,0.225458,0.120809,0.10266,0.10383,0.102901,0.029805,0.030985,0.024331],
'Y':[0.146539,1.301505,1.95955,1.941722,1.301359,0.973364,0.515249,0.511764,0.060833,0.078445,0.048412,0.048412,0.048411,0.023987,0.024004,0.024004],
'Z':[0.942201,0.337306,0.337348,0.334233,0.293011,0.292952,0.292991,0.283421,0.283388,0.283365,0.127694,0.127663,0.107307,0.020678,0.020626,0.020606],
'AA':[0.104065,1.575805,1.576023,0.21511,0.217218,0.21721,0.216388,1.970291,0.354787,0.370289,0.36729,0.118349,0.024065,0.024053,0.024017,0.024042],
'AB':[0.942201,1.746636,1.692423,1.697889,0.455654,0.209682,0.133888,0.132013,0.076559,0.076599,0.076128,0.027359,0.027851,0.027883,0.027883,0.022275],
'AC':[0.810412,0.810115,1.257933,0.642027,0.343694,0.343683,0.311147,0.241768,0.242144,0.242105,0.241714,0.241531,0.240761,0.172639,0.115785,0.023535],
'AD':[0.103851,0.782457,1.868831,2.041097,0.402732,0.353316,0.353307,0.255486,0.175942,0.098294,0.098294,0.092279,0.092921,0.049723,0.024292,0.024277],
'AE':[1.208471,2.837272,2.955299,1.142974,1.079439,1.079304,0.425766,0.425607,0.425652,0.118022,0.118022,0.118024,0.118041,0.038458,0.011392,0.023122],
'AF':[2.79237,0.956208,0.44142,0.441304,0.44134,0.859998,0.098844,0.133577,0.135502,0.126486,0.05358,0.052323,0.056254,0.056251,0.115889,0.020463],
'AG':[2.00291,2.299245,2.295593,2.295952,1.868799,1.868631,1.868591,1.86858,0.451248,0.326493,0.231205,0.237355,0.174155,0.048179,0.022168,0.022111],
'AH':[1.087481,1.08747,1.574516,1.575456,0.406714,0.091424,0.106761,0.109226,0.108262,0.110908,0.110863,0.110964,0.067365,0.030074,0.030744,0.024025],
'AI':[2.834895,1.030464,0.712358,0.195357,0.195171,0.214146,0.200849,0.162154,0.159509,0.116444,0.092134,0.048437,0.04844,0.075772,0.034648,0.024285],
'AJ':[0.104065,0.146657,0.203499,0.203302,0.500791,0.360716,0.356449,0.106791,0.108041,0.106979,0.106988,0.127456,0.127305,0.020773,0.020749,0.020744],
'AK':[0.810412,0.436588,0.436342,1.079186,0.436244,0.2385,0.147457,0.054711,0.058425,0.059919,0.047,0.269207,0.045771,0.041384,0.024036,0.02404],
'AL':[1.968996,1.968989,0.444594,0.444944,0.162057,0.153012,0.15338,0.133009,0.129424,0.126368,0.068186,0.068231,0.0368,0.037657,0.038132,0.0268],
'AM':[2.737267,2.737717,0.934896,2.299535,2.293554,1.951468,0.542445,0.542561,0.54256,0.384525,0.377903,0.377892,0.361335,0.055402,0.030396,0.022136],
'AN':[0.103851,2.791902,1.168255,1.167674,1.167934,0.628936,0.629834,0.208774,0.126515,0.126515,0.126517,0.378413,0.126499,0.118323,0.024536,0.024525],
'AO':[2.299968,2.300374,2.000283,1.301806,1.301806,1.301807,1.301807,0.236281,0.236445,0.134203,0.127517,0.061566,0.059395,0.022717,0.012774,0.023125],
'AP':[1.087481,1.97065,1.968987,1.970254,1.970251,0.319457,0.326021,0.280249,0.1237,0.125998,0.125924,0.125928,0.115259,0.115298,0.03203,0.02187],
'AQ':[0.103851,0.146705,0.476968,0.476884,0.199137,0.199127,0.100861,0.08785,0.086683,0.08667,0.089511,0.090885,0.089724,0.09052,0.021861,0.021354],
'AR':[2.737267,1.208719,1.99817,0.392102,0.359915,0.328966,0.174234,0.178465,0.174384,0.128517,0.038145,0.036161,0.03617,0.024006,0.024016,0.024006],
'AS':[0.810412,0.810398,1.175603,1.219278,1.219211,1.21925,1.219071,0.2236,0.286029,0.285368,0.112756,0.126311,0.126175,0.117118,0.037324,0.023258],
'AT':[0.08422,1.970672,1.970608,1.999642,2.00275,1.868839,0.941694,0.196347,0.195798,0.196018,0.138511,0.077014,0.072676,0.037619,0.035876,0.019796],
'AU':[2.092108,2.793443,2.792764,2.14178,0.532931,0.319316,0.301292,0.301331,0.185723,0.054524,0.045082,0.102113,0.024347,0.024337,0.024326,0.024326],
'AV':[1.968996,1.205385,1.20541,0.442839,0.44268,0.535012,0.391183,0.38766,0.285739,0.176124,0.172014,0.17195,0.171925,0.114956,0.115972,0.022903],
'AW':[2.00291,1.868589,1.868799,1.868799,1.868799,0.442621,0.441026,0.421145,0.418506,0.418484,0.130656,0.130656,0.130656,0.023345,0.023335,0.023331],
'AX':[0.104065,0.382208,0.253545,0.276321,0.27623,0.276308,0.224929,0.216431,0.21384,0.23015,0.058208,0.056106,0.056097,0.056395,0.024157,0.024166],
'AY':[2.834895,1.602147,0.397086,0.217018,0.12738,0.12725,0.133916,0.056058,0.056055,0.137396,0.124692,0.049879,0.019886,0.015281,0.012413,0.02311],
'AZ':[1.208471,1.970831,2.160724,1.258492,1.259881,0.227032,0.171872,0.171839,0.172357,0.170353,0.169917,0.058199,0.061241,0.022489,0.022489,0.022489],
'BA':[0.810412,1.645668,0.646671,0.339545,0.317027,0.299328,0.299149,0.127159,0.127158,0.127155,0.127093,0.127146,0.127094,0.023326,0.02332,0.023357],
'BB':[1.208471,1.970831,1.26008,1.26008,1.301905,1.296455,1.296453,1.259617,0.425747,0.224834,0.227508,0.118024,0.077523,0.038554,0.037135,0.024297],
'BC':[0.104065,0.939128,0.913224,0.914632,0.225376,0.223294,0.223316,0.216507,0.11391,0.115543,0.093398,0.11607,0.116055,0.116045,0.023999,0.023995],
'BD':[0.146539,0.20591,1.258012,1.257667,0.192129,0.192152,0.283157,0.112641,0.187371,0.186732,0.186731,0.186727,0.047512,0.029126,0.026312,0.020728],
'BE':[2.00291,2.837272,1.301807,2.040286,1.301807,0.227252,0.224656,0.160743,0.155779,0.148203,0.148146,0.146093,0.045956,0.057992,0.056984,0.024326],
'BF':[1.087481,1.97065,1.970572,2.164374,2.202184,0.341189,0.338644,0.338654,0.204188,0.206668,0.206645,0.12639,0.021503,0.023657,0.026824,0.026775],
'BG':[2.79237,2.79237,1.481432,1.521513,1.521447,1.495154,0.274868,0.128812,0.098401,0.098415,0.101231,0.123142,0.052815,0.055317,0.034872,0.020956],
'BH':[0.103851,2.299244,2.201229,0.329247,0.331011,0.264244,0.264276,0.11428,0.11428,0.062734,0.029749,0.02087,0.020866,0.020813,0.020815,0.020815],
'BI':[0.038183,0.146705,0.942574,0.942843,0.839263,0.670793,0.299397,0.287601,0.287615,0.180766,0.180709,0.177482,0.114259,0.039761,0.012702,0.023109],
'BJ':[1.968996,1.205385,2.00277,0.408012,0.408012,0.408012,0.40801,0.407987,0.098204,0.066449,0.067747,0.195369,0.198917,0.071995,0.037508,0.023214],
'BK':[0.08422,0.103952,0.103931,0.566545,0.339456,0.325258,0.324952,0.182476,0.133185,0.044247,0.101231,0.113049,0.023722,0.023721,0.023714,0.023715],
'BL':[0.104065,1.970656,1.97042,1.970351,1.970357,1.97037,2.001161,2.005687,1.12838,0.408708,0.408697,0.179077,0.119998,0.116283,0.115458,0.024005],
'BM':[0.146539,0.146534,0.146105,0.925734,0.108286,0.136222,0.136539,0.136774,0.138277,0.092142,0.023577,0.023715,0.024107,0.024283,0.024283,0.024283],
'BN':[0.942201,0.337306,1.97041,0.36064,0.13846,0.670662,0.660593,0.661305,0.335747,0.169973,0.03113,0.030957,0.031649,0.031638,0.032273,0.023209],
'BO':[0.146539,2.007452,0.774374,0.665745,0.663899,0.663829,0.488711,0.11461,0.044471,0.266582,0.043068,0.042784,0.0428,0.024567,0.024551,0.024548],
'BP':[1.968996,1.96898,1.968891,1.970125,0.215738,0.215869,0.211393,0.200491,0.200492,0.109231,0.046742,0.045053,0.044952,0.044963,0.022817,0.022796],
'BQ':[0.104065,0.104036,0.104066,0.942102,0.44517,0.333156,0.753314,0.129571,0.129571,0.128374,0.097971,0.195457,0.038693,0.038808,0.039798,0.023995],
'BR':[1.968996,2.001604,1.301893,1.301893,0.471613,0.352749,0.352763,0.134457,0.13429,0.097738,0.098892,0.182948,0.178843,0.038954,0.023477,0.02348],
'BS':[2.737267,2.737267,1.864343,1.864014,0.784002,0.781873,0.266024,0.255723,0.234347,0.234311,0.239749,0.020184,0.014699,0.011319,0.011326,0.023108],
'BT':[1.968996,0.206142,1.301337,1.302602,1.260022,1.260336,1.260622,1.260612,1.260478,1.260236,1.253738,0.418356,0.130735,0.020567,0.02057,0.020569],
'BU':[0.103851,0.942206,0.802159,0.261402,0.251891,0.600508,0.245363,0.178822,0.128332,0.080106,0.081,0.080842,0.026577,0.026309,0.026294,0.024389],
'BV':[1.087481,1.479415,2.092284,1.997654,0.373339,0.261952,0.205586,0.194334,0.105301,0.105289,0.117728,0.118075,0.118087,0.115654,0.115619,0.023998],
'BW':[0.942201,0.337306,0.295391,0.295376,1.073596,1.071367,1.071389,0.496238,0.094139,0.091566,0.082087,0.022506,0.014732,0.023655,0.020908,0.020916],
'BX':[2.737267,0.972591,0.106758,0.185854,0.178491,0.146037,0.048921,0.048843,0.048852,0.089993,0.050266,0.059323,0.022704,0.022717,0.022104,0.022087],
'BY':[1.208471,1.259967,1.285615,1.285294,1.285294,1.285294,1.285294,1.285294,0.328344,0.254267,0.190608,0.183619,0.180537,0.182233,0.040489,0.023978],
'BZ':[2.79237,2.79268,1.180007,0.405855,0.405855,0.405853,0.405853,0.405852,0.130111,0.097773,0.097773,0.084866,0.135765,0.132787,0.03608,0.023763],
'CA':[1.208471,2.300497,1.579713,1.106705,0.858895,0.643059,0.618495,0.622988,0.623043,0.365951,0.368546,0.058631,0.061803,0.06179,0.060308,0.020248],
'CB':[1.968996,1.205385,1.14121,1.996549,2.001561,1.999409,2.000014,0.412254,0.412254,0.124427,0.123517,0.116484,0.116389,0.118463,0.115899,0.024301],
'CC':[1.208471,2.793443,1.26008,1.260068,1.259808,0.425767,0.425765,0.425765,0.1425,0.153838,0.12902,0.128893,0.012477,0.011391,0.012535,0.023119],
'CD':[0.038183,1.970661,2.160725,0.998762,0.410003,0.201362,0.205047,0.390375,0.400663,0.400704,0.400704,0.131381,0.061408,0.047944,0.022076,0.022052],
'CE':[0.104065,1.419947,0.217446,0.230328,0.230381,0.153658,0.153745,0.146359,0.146336,0.101027,0.12988,0.126498,0.056453,0.029609,0.027337,0.020806],
'CF':[0.942201,0.436592,0.436381,1.970445,1.970378,1.970481,1.97046,1.970348,0.25637,0.143657,0.143624,0.116451,0.093712,0.023989,0.023987,0.023966],
'CG':[2.737267,0.972591,0.202124,0.201947,1.952806,1.957225,0.962,0.960055,0.311754,0.280936,0.281022,0.104519,0.045907,0.040279,0.040122,0.021734],
'CH':[2.00291,2.837272,1.301807,0.444531,0.194887,0.60051,0.597628,0.780012,0.506376,0.506383,0.370908,0.227911,0.058286,0.057858,0.056546,0.024285],
'CI':[0.08422,0.146728,0.146878,1.25748,0.94196,0.342193,0.342699,0.172558,0.11558,0.115623,0.116232,0.116228,0.093399,0.03899,0.02403,0.024025],
'CJ':[1.968996,1.96898,1.96897,1.970579,1.970125,1.128974,1.129011,0.178401,0.175601,0.176763,0.175175,0.054657,0.054352,0.054714,0.012994,0.02311],
'CK':[2.79237,1.590346,0.251513,0.251414,0.128023,0.093676,0.091729,0.085783,0.059935,0.059925,0.049554,0.048168,0.023255,0.02057,0.02057,0.020569],
'CL':[2.299968,2.164646,2.16318,2.165384,0.323011,0.2681,0.243372,0.243857,0.404748,0.40242,0.124438,0.114081,0.114087,0.024335,0.024346,0.024329],
'CM':[1.087481,1.952077,0.216597,0.296927,0.295911,0.295912,0.285534,0.105751,0.105751,0.105661,0.105706,0.105529,0.08727,0.020397,0.012902,0.023131],
'CN':[0.810412,1.970653,1.970906,0.50227,0.452707,0.280885,0.241961,0.103553,0.104805,0.047522,0.045968,0.038992,0.038936,0.037308,0.034521,0.020744],
'CO':[0.103851,2.791902,1.746257,1.812782,0.914635,0.243699,0.217901,0.217806,0.217813,0.416178,0.422772,0.187335,0.103449,0.091622,0.040548,0.020591],
'CP':[2.00291,2.73768,2.738663,2.004485,2.004515,1.301734,0.390708,0.388384,0.169966,0.136264,0.182192,0.047941,0.037724,0.037758,0.037721,0.023994],
'CQ':[0.942201,1.507639,1.506142,0.767703,0.422725,0.422725,0.112747,0.081923,0.081029,0.080667,0.021756,0.021765,0.024117,0.023279,0.023274,0.023274],
'CR':[0.146539,0.20591,0.192161,0.543528,1.028516,1.028432,1.028617,1.02886,0.210286,0.143085,0.116962,0.115643,0.117066,0.115799,0.115756,0.022306],
'CS':[0.104065,0.939128,1.574519,1.575764,1.575586,0.514904,0.136343,0.137983,0.116171,0.057679,0.058053,0.056587,0.026986,0.027546,0.027556,0.024025],
'CT':[2.299968,1.959299,0.539444,0.535852,0.385001,0.38173,0.176264,0.242987,0.235833,0.09633,0.096128,0.049174,0.023151,0.023643,0.023332,0.021035],
'CU':[2.834895,0.825085,0.169853,0.169925,0.168657,0.153777,0.176708,0.145129,0.123747,0.123731,0.123698,0.109616,0.053224,0.022053,0.022044,0.022032],
'CV':[0.810412,1.970653,1.970906,0.375027,0.375273,0.364871,0.364919,0.371475,0.37473,0.120154,0.02895,0.024572,0.024572,0.024559,0.024557,0.024542],
}

# the val_of_easy_control for each rod, 1 as the best
built_values = {'#0':1,'#1':0.838709677419355,'#2':0.790322580645161,'#3':0.741935483870968,'#4':0.693548387096774,'#5':0.564516129032258,'#6':0.516129032258065,'#7':0.32258064516129,'#8':0.387096774193548,'#9':0.483870967741935,'#10':0.161290322580645,'#11':0.225806451612903,'#12':0.0645161290322581,'#13':0.548387096774194,'#14':0.806451612903226,'#15':0.419354838709677,}


# 参数设置
# n = 25
n = max(5, int(len(data) * 0.4))  # 取总数据 40% 或最少 5 个
m = 2

def normalize_values(values):
    min_value = min(values.values())
    max_value = max(values.values())
    return {k: (v - min_value) / (max_value - min_value) for k, v in values.items()}

def calculate_avg_values(data):
    """Calculate and normalize the average values of each sequence."""
    avg_values = {sequence: sum(results) / len(results) for sequence, results in data.items()}
    return normalize_values(avg_values), avg_values #lower the better

def calculate_max_values(data):
    """Calculate and normalize the maximum values of each sequence."""
    max_values = {sequence: max(results) for sequence, results in data.items()}
    return normalize_values(max_values), max_values #lower the better

def get_top_sequences(normalized_values, n):
    """Retrieve the top n sequences with the smallest normalized values."""
    return sorted(normalized_values.items(), key=lambda x: x[1])[:n]

def calculate_rod_value_from_seq(sorted_sequences, tags_data, values):
    tag_influence = defaultdict(float)
    for seq, _ in sorted_sequences:
        sequence_length = len(tags_data[seq])
        for idx, tag in enumerate(tags_data[seq]):
            weight = (sequence_length - idx) / sequence_length
            tag_influence[tag] += weight * (1 / values[seq])
    return normalize_values(tag_influence) #higher the better

def sort_tags(tag):
    """Extracts the numerical part of the tag for sorting."""
    number = int(re.search(r'\d+', tag).group())
    return number

def calculate_final_influence(rod_influence_avg, rod_influence_max, built_values):
    return {tag: 0.5 * rod_influence_avg.get(tag, 0) + 
                 0.3 * rod_influence_max.get(tag, 0) + 
                 0.2 * built_values.get(tag, 0) for tag in built_values}
def plot_final_influence(final_influence):
    sorted_items = sorted(final_influence.items(), key=lambda x: x[1], reverse=True)
    tags, values = zip(*sorted_items)
    plt.bar(tags, values, color='skyblue')
    plt.xticks(rotation=90)
    plt.xlabel("Rod Tags")
    plt.ylabel("Final Influence")
    plt.title("Final Influence of Rods")
    plt.show()

# Main logic
normalized_avg_values, avg_values = calculate_avg_values(data)
normalized_max_values, max_values = calculate_max_values(data)

sorted_sequences_avg = get_top_sequences(normalized_avg_values, n=30)
sorted_sequences_max = get_top_sequences(normalized_max_values, n=30)

rod_influence_avg = calculate_rod_value_from_seq(sorted_sequences_avg, tags_data, avg_values)
rod_influence_max = calculate_rod_value_from_seq(sorted_sequences_max, tags_data, max_values)

final_influence = calculate_final_influence(rod_influence_avg, rod_influence_max, built_values)

# Print the sorted final influences
final_influence = calculate_final_influence(*map(calculate_rod_value_from_seq, [sorted_sequences_avg, sorted_sequences_max], [tags_data] * 2, [avg_values, max_values]), built_values)
plot_final_influence(final_influence)