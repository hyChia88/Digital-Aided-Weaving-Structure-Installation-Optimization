from collections import defaultdict

# Raw data, S1
tags_data = {
'A':['#4','#7','#5','#3','#0','#2','#1','#6'],
'B':['#1','#0','#6','#5','#2','#4','#3','#7'],
'C':['#4','#2','#5','#7','#1','#6','#0','#3'],
'D':['#5','#3','#6','#0','#4','#1','#2','#7'],
'E':['#4','#5','#7','#3','#2','#6','#0','#1'],
'F':['#6','#2','#0','#1','#4','#3','#7','#5'],
'G':['#7','#6','#1','#5','#0','#3','#2','#4'],
'H':['#6','#3','#4','#0','#5','#2','#1','#7'],
'I':['#1','#2','#3','#6','#7','#5','#4','#0'],
'J':['#2','#4','#5','#3','#0','#1','#7','#6'],
'K':['#5','#6','#7','#4','#3','#1','#2','#0'],
'L':['#1','#5','#4','#0','#2','#6','#7','#3'],
'M':['#5','#3','#2','#1','#6','#7','#4','#0'],
'N':['#4','#3','#0','#6','#1','#2','#7','#5'],
'O':['#0','#6','#7','#3','#4','#2','#5','#1'],
'P':['#1','#2','#0','#5','#6','#3','#7','#4'],
'Q':['#6','#0','#4','#7','#1','#5','#3','#2'],
'R':['#3','#5','#6','#0','#2','#1','#7','#4'],
'S':['#1','#0','#4','#5','#2','#7','#3','#6'],
'T':['#2','#5','#6','#1','#3','#0','#4','#7'],
'U':['#5','#4','#0','#7','#1','#2','#3','#6'],
'V':['#3','#6','#2','#4','#0','#7','#1','#5'],
'W':['#2','#4','#0','#3','#1','#7','#5','#6'],
'X':['#6','#3','#4','#1','#5','#0','#2','#7'],
'Y':['#4','#0','#7','#5','#2','#6','#3','#1'],
'Z':['#6','#2','#1','#4','#5','#0','#7','#3'],
'AA':['#3','#0','#5','#7','#1','#6','#2','#4'],
'AB':['#6','#5','#3','#4','#2','#1','#0','#7'],
'AC':['#1','#5','#0','#2','#6','#7','#3','#4'],
'AD':['#2','#4','#1','#3','#6','#7','#0','#5'],
'AE':['#6','#7','#0','#1','#2','#5','#4','#3'],
'AF':['#4','#3','#2','#5','#6','#7','#1','#0'],
'AG':['#2','#6','#1','#7','#3','#0','#5','#4'],
'AH':['#4','#5','#3','#1','#6','#2','#7','#0'],
'AI':['#6','#5','#7','#0','#2','#4','#3','#1'],
'AJ':['#3','#4','#7','#1','#0','#2','#5','#6'],
'AK':['#6','#5','#3','#4','#1','#7','#0','#2'],
'AL':['#7','#0','#3','#6','#1','#2','#4','#5'],
'AM':['#2','#4','#7','#0','#3','#5','#1','#6'],
'AN':['#2','#7','#0','#1','#6','#5','#4','#3'],
'AO':['#3','#4','#7','#5','#1','#0','#2','#6'],
'AP':['#7','#0','#6','#3','#5','#2','#4','#1'],
'AQ':['#2','#4','#1','#5','#3','#7','#0','#6'],
'AR':['#7','#5','#6','#0','#1','#4','#3','#2'],
'AS':['#5','#4','#7','#6','#2','#1','#0','#3'],
'AT':['#6','#1','#7','#0','#3','#2','#4','#5'],
'AU':['#1','#3','#6','#7','#0','#5','#4','#2'],
'AV':['#7','#0','#4','#3','#2','#1','#5','#6'],
'AW':['#2','#6','#5','#7','#0','#3','#1','#4'],
'AX':['#2','#7','#3','#1','#0','#4','#5','#6'],
'AY':['#3','#6','#5','#1','#7','#2','#0','#4'],
'AZ':['#7','#4','#5','#0','#3','#2','#1','#6'],
'BA':['#5','#1','#2','#6','#7','#3','#4','#0'],
'BB':['#7','#4','#1','#0','#6','#3','#2','#5'],
'BC':['#6','#3','#4','#7','#2','#1','#5','#0'],
'BD':['#4','#7','#2','#3','#0','#6','#5','#1'],
'BE':['#1','#4','#5','#7','#3','#0','#6','#2'],
'BF':['#7','#5','#6','#0','#1','#2','#3','#4'],
'BG':['#0','#5','#2','#4','#7','#1','#3','#6'],
'BH':['#2','#5','#7','#3','#1','#6','#0','#4'],
'BI':['#0','#3','#4','#1','#7','#2','#6','#5'],
'BJ':['#7','#6','#2','#0','#3','#1','#4','#5'],
'BK':['#2','#1','#0','#4','#7','#6','#5','#3'],
'BL':['#7','#3','#6','#1','#5','#0','#4','#2'],
'BM':['#4','#3','#0','#5','#7','#6','#1','#2'],
'BN':['#6','#7','#2','#5','#3','#4','#0','#1'],
'BO':['#4','#5','#0','#1','#6','#7','#3','#2'],
'BP':['#5','#7','#4','#1','#2','#0','#3','#6'],
'BQ':['#3','#0','#6','#2','#7','#1','#5','#4'],
'BR':['#1','#7','#4','#3','#6','#0','#5','#2'],
'BS':['#6','#1','#0','#3','#7','#2','#5','#4'],
'BT':['#7','#4','#2','#5','#6','#1','#3','#0'],
'BU':['#2','#6','#0','#5','#7','#4','#3','#1'],
'BV':['#7','#3','#4','#1','#5','#6','#0','#2'],
'BW':['#6','#5','#3','#0','#2','#7','#1','#4'],
'BX':['#4','#5','#7','#2','#6','#3','#1','#0'],
'BY':['#1','#0','#4','#7','#3','#2','#6','#5'],
'BZ':['#7','#6','#1','#2','#5','#0','#3','#4'],
'CA':['#3','#2','#4','#0','#7','#1','#5','#6'],
'CB':['#7','#6','#3','#5','#4','#0','#1','#2'],
'CC':['#4','#1','#5','#7','#0','#3','#2','#6'],
'CD':['#7','#0','#6','#5','#2','#1','#3','#4'],
'CE':['#2','#3','#5','#4','#7','#0','#6','#1'],
'CF':['#7','#5','#6','#0','#1','#3','#4','#2'],
'CG':['#4','#2','#3','#1','#6','#7','#0','#5'],
'CH':['#7','#0','#2','#4','#3','#1','#5','#6'],
'CI':['#1','#4','#6','#7','#5','#0','#3','#2'],
'CJ':['#7','#3','#0','#1','#4','#2','#5','#6'],
'CK':['#2','#6','#3','#5','#7','#1','#0','#4'],
'CL':['#7','#0','#5','#4','#3','#6','#2','#1'],
'CM':['#6','#5','#1','#7','#2','#0','#3','#4'],
'CN':['#5','#7','#4','#0','#2','#1','#6','#3'],
'CO':['#2','#3','#6','#7','#4','#1','#0','#5'],
'CP':['#1','#7','#4','#0','#3','#6','#2','#5'],
'CQ':['#6','#2','#1','#7','#3','#5','#4','#0'],
'CR':['#4','#7','#2','#0','#6','#5','#1','#3'],
'CS':['#3','#5','#4','#7','#2','#0','#6','#1'],
'CT':['#4','#7','#6','#5','#1','#3','#0','#2'],
'CU':['#5','#2','#4','#3','#1','#7','#6','#0'],
'CV':['#5','#7','#6','#0','#3','#1','#4','#2'],

}

results_data = {
'A':[6.983414,6.993276,6.877519,4.987506,0.179629,0.169428,0.126582,0.051831],
'B':[5.153109,3.276596,0.462972,0.252491,0.122861,0.071367,0.050476,0.050192],
'C':[6.983414,1.526662,1.486372,1.487412,0.967441,0.084709,0.074504,0.051074],
'D':[6.093292,5.174195,0.886499,0.236121,0.137007,0.088816,0.050821,0.050822],
'E':[6.983414,6.750252,6.756106,4.98283,1.152142,0.120671,0.091799,0.051603],
'F':[6.343037,0.979781,0.601457,0.451233,0.354682,0.12958,0.127841,0.050001],
'G':[4.59615,6.306217,1.08091,0.346604,0.253609,0.120562,0.120562,0.050018],
'H':[6.343037,2.403426,1.200139,0.389049,0.133082,0.094224,0.051019,0.050957],
'I':[5.153109,3.515827,1.313976,0.408166,0.406225,0.11782,0.069593,0.051559],
'J':[5.435052,1.623182,1.484934,1.161613,0.174273,0.127024,0.12698,0.051862],
'K':[6.093292,4.355254,4.374612,0.75066,0.309017,0.140457,0.069493,0.050573],
'L':[5.153109,5.11658,3.512776,0.302412,0.143323,0.072704,0.072658,0.051443],
'M':[6.093292,5.174195,1.197901,0.95477,0.105309,0.110022,0.069018,0.051897],
'N':[6.983414,5.241919,0.198624,0.385748,0.163121,0.1315,0.131038,0.051467],
'O':[4.792679,3.029793,3.03467,1.023519,0.390124,0.276734,0.092536,0.051026],
'P':[5.153109,3.515827,2.694297,0.252651,0.122887,0.063594,0.111336,0.050914],
'Q':[6.343037,3.005155,1.689547,1.675087,0.180061,0.08262,0.086094,0.049208],
'R':[5.404173,5.185528,0.884739,0.233363,0.114625,0.061008,0.111336,0.051179],
'S':[5.153109,3.276596,1.466145,0.298704,0.140145,0.139667,0.127477,0.050595],
'T':[5.435052,1.400908,0.324404,0.127633,0.104879,0.062904,0.050888,0.050963],
'U':[6.093292,6.748257,0.692672,0.692364,0.306609,0.142064,0.115988,0.050629],
'V':[5.404173,2.408591,0.361392,0.273615,0.275588,0.275615,0.12953,0.050799],
'W':[5.435052,1.623182,0.919601,0.312458,0.496707,0.500593,0.10505,0.052028],
'X':[6.343037,2.403426,1.200139,0.527824,0.142196,0.089856,0.050989,0.050982],
'Y':[6.983414,0.63719,0.640339,0.706352,0.231966,0.158096,0.090854,0.051037],
'Z':[6.343037,0.979781,0.76218,0.447625,0.080733,0.07211,0.072057,0.050088],
'AA':[5.404173,3.08329,0.733358,0.731478,0.229036,0.121388,0.113492,0.051026],
'AB':[6.343037,4.377397,0.901661,0.311442,0.124665,0.068041,0.051381,0.051307],
'AC':[5.153109,5.11658,0.524808,0.253138,0.121707,0.121277,0.109765,0.050767],
'AD':[5.435052,1.623182,1.516247,1.278926,0.293373,0.29045,0.130056,0.051572],
'AE':[6.343037,6.36424,3.091319,0.469345,0.454976,0.122651,0.071464,0.050378],
'AF':[6.983414,5.241919,1.415787,1.165594,0.119875,0.119775,0.069775,0.052154],
'AG':[5.435052,0.982838,0.762682,0.762467,0.409565,0.177391,0.113504,0.050867],
'AH':[6.983414,6.750252,4.983505,1.81336,0.143333,0.069731,0.069595,0.052031],
'AI':[6.343037,4.377397,4.341256,1.113694,0.262717,0.155978,0.096087,0.050509],
'AJ':[5.404173,5.245624,5.25372,2.381545,0.522843,0.498678,0.105618,0.052064],
'AK':[6.343037,4.377397,0.901661,0.311442,0.140928,0.140797,0.088584,0.051011],
'AL':[4.59615,4.792796,3.092784,1.017136,0.296091,0.184609,0.128435,0.051163],
'AM':[5.435052,1.623182,1.626537,0.909829,0.303628,0.175859,0.113407,0.051263],
'AN':[5.435052,5.433896,2.476761,2.658829,0.451342,0.123497,0.073724,0.050561],
'AO':[5.404173,5.245624,5.25372,4.974865,1.803438,0.232195,0.127829,0.052232],
'AP':[4.59615,4.792796,3.124052,1.022486,0.32681,0.120562,0.090981,0.050507],
'AQ':[5.435052,1.623182,1.516247,0.965402,0.836687,0.824116,0.127561,0.051431],
'AR':[4.59615,6.270936,4.359619,1.117513,0.250726,0.078616,0.08536,0.049255],
'AS':[6.093292,6.748257,6.710253,0.751826,0.191345,0.085665,0.073192,0.050825],
'AT':[6.343037,1.088284,1.075552,0.46866,0.289463,0.177489,0.126658,0.050478],
'AU':[5.153109,2.837611,0.71108,0.721013,0.30093,0.1244,0.088803,0.051068],
'AV':[4.59615,4.792796,0.647041,0.204828,0.293309,0.492704,0.104811,0.051673],
'AW':[5.435052,0.982838,0.326521,0.325523,0.258606,0.120218,0.11351,0.050387],
'AX':[5.435052,5.433896,2.017544,1.284503,0.764215,0.499514,0.10687,0.051684],
'AY':[5.404173,2.408591,0.886244,0.244024,0.247109,0.110363,0.110363,0.050883],
'AZ':[4.59615,7.030261,6.833394,0.697699,0.178809,0.166595,0.12646,0.051601],
'BA':[6.093292,5.113343,0.885907,0.123705,0.122939,0.110262,0.07011,0.051215],
'BB':[4.59615,7.030261,4.525054,1.446344,0.196275,0.162724,0.128951,0.050368],
'BC':[6.343037,2.403426,1.200139,1.201304,0.273046,0.28528,0.0677,0.051116],
'BD':[6.983414,6.993276,1.521061,1.423899,0.300742,0.256465,0.091305,0.051485],
'BE':[5.153109,4.590055,3.565866,3.505662,1.884958,0.23971,0.087848,0.051153],
'BF':[4.59615,6.270936,4.359619,1.117513,0.250726,0.124124,0.120562,0.05011],
'BG':[4.792679,2.783398,0.88723,0.231165,0.231854,0.144717,0.121939,0.050265],
'BH':[5.435052,1.400908,1.383877,1.213627,0.963275,0.117329,0.117329,0.051156],
'BI':[4.792679,3.08905,0.193366,0.525462,0.522491,0.497745,0.129813,0.051247],
'BJ':[4.59615,6.306217,0.976621,0.57993,0.362954,0.182633,0.129915,0.050638],
'BK':[5.435052,3.599659,2.676141,0.991175,0.994208,0.359431,0.072968,0.050428],
'BL':[4.59615,5.404646,2.412262,0.716909,0.275923,0.124315,0.088535,0.050841],
'BM':[6.983414,5.241919,0.198624,0.182003,0.181989,0.135761,0.090851,0.05183],
'BN':[6.343037,6.36424,0.974401,0.326304,0.203495,0.12706,0.0955,0.051006],
'BO':[6.983414,6.750252,0.697516,0.302513,0.081443,0.081057,0.087599,0.050047],
'BP':[6.093292,6.035553,6.645696,3.577623,0.925565,0.143119,0.116771,0.050516],
'BQ':[5.404173,3.08329,1.010957,0.350841,0.351014,0.180373,0.110385,0.051159],
'BR':[5.153109,5.153874,4.444492,2.376183,0.536983,0.162433,0.090181,0.05095],
'BS':[6.343037,1.088284,0.467884,0.282865,0.279492,0.178707,0.110363,0.050986],
'BT':[4.59615,7.030261,1.470944,1.483807,0.191874,0.090035,0.070491,0.050599],
'BU':[5.435052,0.982838,0.595258,0.256955,0.2565,0.15228,0.093674,0.050455],
'BV':[4.59615,5.404646,5.196156,2.3334,1.749716,0.143611,0.090151,0.051629],
'BW':[6.343037,4.377397,0.901661,0.228724,0.124608,0.12474,0.110114,0.050934],
'BX':[6.983414,6.750252,6.756106,1.485219,0.194059,0.120155,0.070471,0.051488],
'BY':[5.153109,3.276596,1.466145,1.466851,0.575495,0.512238,0.129607,0.050709],
'BZ':[4.59615,6.306217,1.08091,0.771959,0.122082,0.123072,0.120562,0.05008],
'CA':[5.404173,2.009586,1.421106,0.343864,0.330178,0.49178,0.105285,0.05185],
'CB':[4.59615,6.306217,2.430132,0.881833,0.316368,0.135022,0.086931,0.050694],
'CC':[6.983414,4.600502,3.593344,3.686283,0.298172,0.239654,0.126784,0.051205],
'CD':[4.59615,4.792796,3.124052,1.123753,0.252512,0.12278,0.120562,0.050209],
'CE':[5.435052,2.012822,1.205613,1.16226,1.164187,0.166093,0.091995,0.051808],
'CF':[4.59615,6.270936,4.359619,1.117513,0.250726,0.120562,0.085743,0.050384],
'CG':[6.983414,1.526662,1.414087,1.285726,0.294878,0.291792,0.131017,0.051596],
'CH':[4.59615,4.792796,2.472179,0.86015,0.302664,0.49594,0.104492,0.051482],
'CI':[5.153109,4.590055,0.679027,0.678891,0.13838,0.083253,0.086382,0.049415],
'CJ':[4.59615,5.404646,3.087499,1.114843,0.507914,0.493463,0.10537,0.051505],
'CK':[5.435052,0.982838,0.360497,0.210419,0.209819,0.110385,0.110385,0.050859],
'CL':[4.59615,4.792796,2.748733,0.696534,0.17664,0.136894,0.09155,0.051329],
'CM':[6.343037,4.377397,0.341127,0.342046,0.122984,0.124465,0.113521,0.05028],
'CN':[6.093292,6.035553,6.645696,0.689943,0.231527,0.141673,0.072396,0.050654],
'CO':[5.435052,2.012822,0.354002,0.355113,0.267602,0.286091,0.129374,0.050897],
'CP':[5.153109,5.153874,4.444492,1.496314,0.580242,0.164483,0.12826,0.050905],
'CQ':[6.343037,0.979781,0.76218,0.761941,0.400826,0.113504,0.068707,0.050744],
'CR':[6.983414,6.993276,1.521061,0.950214,0.381761,0.158878,0.072694,0.050792],
'CS':[5.404173,5.185528,4.969246,4.978656,1.153928,0.154426,0.092016,0.051925],
'CT':[6.983414,6.993276,3.977671,0.746657,0.136084,0.141221,0.085677,0.050474],
'CU':[6.093292,1.366901,1.463649,1.160576,0.816597,0.810031,0.070569,0.051394],
'CV':[6.093292,6.035553,4.338495,1.116375,0.330585,0.119518,0.086848,0.050658],

}

# Calculate SUM_value for each sequence
sum_values = {sequence: sum(results)/len(results) for sequence, results in results_data.items()}

#通过多次调整m,n来找最佳的结果 set n 如果杆件数不多那就 len(tags)/2
n=30
m=2
# Sort sequences based on their SUM_value and get the top n sequences
sorted_sequences = sorted(sum_values.items(), key=lambda x: x[1])[:n]

# Extract tags# for the top 10 sequences
top_tags = []
for sequence, _ in sorted_sequences:
    top_tags.extend(tags_data[sequence])

# Extract the first half of tags# from the top 10 sequences
half_list_length = len(top_tags) // m
top_tags = top_tags[:half_list_length]

# Calculate the influence factor for each tag
influence_factors = defaultdict(float)
for sequence, _ in sorted_sequences:
    # Get the tags# from the sequence
    sequence_tags = tags_data[sequence]
    # Calculate the weight for SUM_value (lower is better)
    sum_value_weight = 1 / sum_values[sequence]
    # Calculate the weight for sequence position (lower index is better)
    sequence_weight = {tag: (half_list_length - sequence_tags.index(tag)) / half_list_length for tag in sequence_tags}
    # Calculate the influence factor for each tag based on weights
    for tag in sequence_tags:
        influence_factors[tag] += sum_value_weight * sequence_weight[tag]

# Sort tags based on their total influence factor
sorted_influence_factors = sorted(influence_factors.items(), key=lambda x: x[1],reverse=True)

# Output the sorted tags and their total influence factors
for tag, total_influence_factor in sorted_influence_factors:
    print("{}, Total Influence Factor: {}".format(tag, total_influence_factor))

# Output the sorted tags and their total influence factors
for tag, total_influence_factor in sorted_influence_factors:
    print("{}".format(tag))